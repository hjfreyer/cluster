#cloud-config

ssh_authorized_keys:
  - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCaX2jEcW7VrVXQLAWkhuXn0Q54x4DWSmPIYdTrGfvEgzveUDbt8firnsa6a9nkWsRqfhOLncRy/r4/PhV4i70EmqjHF9g7FkGN7M7a6KYLl61o2cqsrQ8YZA80S8frJNYgC/O9yGvZTkbjT5JKdFINY8IZp8SYBgSdL/vbxRxvOqk2APBNfyuwlhshE31Yqka54+bQHa20lUW9BQpWyM6d9Bht/Yys3yVq18KyhzVLuWDOXlcAfoqZBlG57D7zIDZ0l230VjRxdJQRkv31Od81+dqZV873cGmvLgEFHl3v1jGgCWbVcx0RZ6VZqvqBF1el+Nad4HhbiMka9k2/qgSV hjfreyer@church"
  - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCn2qvwxlvi5h0LWyhPItcPo9eCFauWdDDhxkBIfUL7AySP/SxJ+IoDsG3+LrSaHntu++eNW41o6XEVkD4XHjRQceelgoryJxammmD+WwbBJPlBEbVhaWW2pdWNunxLE2cbB+COBvVIWFQkPx+4oAKzToqWk+OLzw9KcZn3jRxSqmyCICq0h75RryX/zjEd6pDd8Up+VI/XM4iWDSSsHdUcFMRHLeYr5+jbGJ3LimaQqBWpQo/89paeMaMqsalADKeAhJRuMoNGgOh7wsWyoN7BJi2JStdIr7j3xh2eWntYAG3da2gOxzPEq9jV83wcD8nJYyibdXunE1rlAj8hA7Jf hjfreyer@leibniz"

coreos:
  etcd2:
    advertise-client-urls: "http://10.0.0.4:2379"
    listen-client-urls: "http://0.0.0.0:2379"
    data-dir: /data/etcd
  units:
    - name: data.mount
      command: start
      content: |
        [Mount]
        What=hostdata
        Where=/data/
        Type=9p
        Options=virtio,version=9p2000.L

    - name: local.mount
      command: start
      content: |
        [Mount]
        What=/dev/disk/by-uuid/14d9f11b-3933-425d-9fba-a5d52f3536bf
        Where=/local
        Type=ext4

    - name: flanneld.service
      drop-ins:
      - name: 40-ExecStartPre-symlink.conf
        content: |
          [Service]
          ExecStartPre=/usr/bin/ln -sf /etc/flannel/options.env /run/flannel/options.env
      command: start

    - name: docker.service
      drop-ins:
      - name: 40-flannel.conf
        content: |
          [Unit]
          Requires=flanneld.service
          After=flanneld.service
      command: start

    - name: etcd2.service
      command: start
    - name: kubelet.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=Kubernetes Kubelet
        Documentation=https://github.com/kubernetes/kubernetes

        [Service]
        ExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests
        ExecStartPre=/usr/bin/mkdir -p /var/log/containers

        Environment=KUBELET_VERSION=v1.4.5_coreos.0
        Environment="RKT_OPTS=--volume var-log,kind=host,source=/var/log \
          --mount volume=var-log,target=/var/log \
          --volume dns,kind=host,source=/etc/resolv.conf \
          --mount volume=dns,target=/etc/resolv.conf"

        ExecStart=/usr/lib/coreos/kubelet-wrapper \
          --api-servers=http://127.0.0.1:8080 \
          --register-schedulable=true \
          --allow-privileged=true \
          --config=/etc/kubernetes/manifests \
          --hostname-override=10.0.0.4 \
          --cluster-dns=10.3.0.10 \
          --cluster-domain=cluster.local
        Restart=always
        RestartSec=10
        [Install]
        WantedBy=multi-user.target
write_files:
  - path: '/etc/flannel/options.env'
    content: |
      FLANNELD_IFACE=10.0.0.4
      FLANNELD_ETCD_ENDPOINTS=http://10.0.0.4:2379

  - path: '/etc/kubernetes/manifests/kube-apiserver.yaml'
    content: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: kube-apiserver
        namespace: kube-system
      spec:
        hostNetwork: true
        volumes:
          - name: ssl-certs-kubernetes
            hostPath:
              path: /etc/kubernetes/ssl
          - name: ssl-certs-host
            hostPath:
              path: /usr/share/ca-certificates
        containers:
          - name: kube-apiserver
            image: quay.io/coreos/hyperkube:v1.4.3_coreos.0
            command:
            - /hyperkube
            - apiserver
            - --bind-address=0.0.0.0
            - --etcd-servers=http://10.0.0.4:2379
            - --allow-privileged=true
            - --service-cluster-ip-range=10.3.0.0/24
            - --secure-port=443
            - --advertise-address=10.0.0.4
            - --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota
            - --tls-cert-file=/etc/kubernetes/ssl/apiserver.pem
            - --tls-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem
            - --client-ca-file=/etc/kubernetes/ssl/ca.pem
            - --service-account-key-file=/etc/kubernetes/ssl/apiserver-key.pem
            - --runtime-config=extensions/v1beta1=true,extensions/v1beta1/networkpolicies=true
            ports:
            - containerPort: 443
              hostPort: 443
              name: https
            - containerPort: 8080
              hostPort: 8080
              name: local
            volumeMounts:
            - mountPath: /etc/kubernetes/ssl
              name: ssl-certs-kubernetes
              readOnly: true
            - mountPath: /etc/ssl/certs
              name: ssl-certs-host
              readOnly: true

  - path: /etc/kubernetes/manifests/kube-proxy.yaml
    content: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: kube-proxy
        namespace: kube-system
      spec:
        hostNetwork: true
        containers:
        - name: kube-proxy
          image: quay.io/coreos/hyperkube:v1.4.3_coreos.0
          command:
          - /hyperkube
          - proxy
          - --master=http://127.0.0.1:8080
          - --proxy-mode=iptables
          securityContext:
            privileged: true
          volumeMounts:
          - mountPath: /etc/ssl/certs
            name: ssl-certs-host
            readOnly: true
        volumes:
        - hostPath:
          path: /usr/share/ca-certificates
          name: ssl-certs-host

  - path: /etc/kubernetes/manifests/kube-controller-manager.yaml
    content: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: kube-controller-manager
        namespace: kube-system
      spec:
        hostNetwork: true
        containers:
        - name: kube-controller-manager
          image: quay.io/coreos/hyperkube:v1.4.3_coreos.0
          command:
          - /hyperkube
          - controller-manager
          - --master=http://127.0.0.1:8080
          - --leader-elect=true
          - --service-account-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem
          - --root-ca-file=/etc/kubernetes/ssl/ca.pem
          livenessProbe: 
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 10252
            initialDelaySeconds: 15
            timeoutSeconds: 1
          volumeMounts:
          - mountPath: /etc/kubernetes/ssl
            name: ssl-certs-kubernetes
            readOnly: true
          - mountPath: /etc/ssl/certs
            name: ssl-certs-host
            readOnly: true
        volumes:
        - hostPath:
            path: /etc/kubernetes/ssl
          name: ssl-certs-kubernetes
        - hostPath:
            path: /usr/share/ca-certificates
          name: ssl-certs-host

  - path: /etc/kubernetes/manifests/kube-scheduler.yaml
    content: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: kube-scheduler
        namespace: kube-system
      spec:
        hostNetwork: true
        containers:
        - name: kube-scheduler
          image: quay.io/coreos/hyperkube:v1.4.3_coreos.0
          command:
          - /hyperkube
          - scheduler
          - --master=http://127.0.0.1:8080
          - --leader-elect=true
          livenessProbe:
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 10251
            initialDelaySeconds: 15
            timeoutSeconds: 1
